"""Add family relationships table

Revision ID: d95901f2714f
Revises: update_user_roles_001
Create Date: 2025-07-30 19:36:08.417611

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d95901f2714f"
down_revision: Union[str, None] = "update_user_roles_001"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "families",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("church_id", sa.Integer(), nullable=False),
        sa.Column("family_name", sa.String(), nullable=False),
        sa.Column("head_member_id", sa.Integer(), nullable=True),
        sa.Column("address", sa.String(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["church_id"],
            ["churches.id"],
        ),
        sa.ForeignKeyConstraint(
            ["head_member_id"],
            ["members.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_families_id"), "families", ["id"], unique=False)
    op.create_table(
        "family_relationships",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("church_id", sa.Integer(), nullable=False),
        sa.Column("member_id", sa.Integer(), nullable=False),
        sa.Column("related_member_id", sa.Integer(), nullable=False),
        sa.Column("relationship_type", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["church_id"],
            ["churches.id"],
        ),
        sa.ForeignKeyConstraint(
            ["member_id"],
            ["members.id"],
        ),
        sa.ForeignKeyConstraint(
            ["related_member_id"],
            ["members.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_family_relationships_id"), "family_relationships", ["id"], unique=False
    )
    op.drop_constraint(
        "attendances_member_id_service_date_service_type_key",
        "attendances",
        type_="unique",
    )
    op.drop_index("idx_attendances_date", table_name="attendances")
    op.drop_index("idx_attendances_member_id", table_name="attendances")
    op.create_index(op.f("ix_attendances_id"), "attendances", ["id"], unique=False)
    op.drop_index("idx_bulletins_church_id", table_name="bulletins")
    op.create_index(op.f("ix_bulletins_id"), "bulletins", ["id"], unique=False)
    op.add_column(
        "calendar_events", sa.Column("event_time", sa.String(), nullable=True)
    )
    op.drop_index("idx_calendar_events_date", table_name="calendar_events")
    op.create_index(
        op.f("ix_calendar_events_event_date"),
        "calendar_events",
        ["event_date"],
        unique=False,
    )
    op.create_index(
        op.f("ix_calendar_events_id"), "calendar_events", ["id"], unique=False
    )
    op.create_index(op.f("ix_churches_id"), "churches", ["id"], unique=False)
    op.drop_index("idx_members_church_id", table_name="members")
    op.drop_index("idx_members_status", table_name="members")
    op.create_index(op.f("ix_members_id"), "members", ["id"], unique=False)
    op.create_foreign_key(None, "members", "families", ["family_id"], ["id"])
    op.drop_index("idx_notifications_user", table_name="notifications")
    op.create_index(op.f("ix_notifications_id"), "notifications", ["id"], unique=False)
    op.drop_index("idx_qr_codes_member", table_name="qr_codes")
    op.create_index(op.f("ix_qr_codes_id"), "qr_codes", ["id"], unique=False)
    op.add_column("sms_history", sa.Column("error_message", sa.Text(), nullable=True))
    op.drop_index("idx_sms_history_church", table_name="sms_history")
    op.create_index(op.f("ix_sms_history_id"), "sms_history", ["id"], unique=False)
    op.alter_column(
        "users",
        "role",
        existing_type=sa.VARCHAR(),
        nullable=True,
        existing_server_default=sa.text("'user'::character varying"),
    )
    op.drop_constraint("users_email_key", "users", type_="unique")
    op.drop_constraint("users_username_key", "users", type_="unique")
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.create_unique_constraint("users_username_key", "users", ["username"])
    op.create_unique_constraint("users_email_key", "users", ["email"])
    op.alter_column(
        "users",
        "role",
        existing_type=sa.VARCHAR(),
        nullable=False,
        existing_server_default=sa.text("'user'::character varying"),
    )
    op.drop_index(op.f("ix_sms_history_id"), table_name="sms_history")
    op.create_index(
        "idx_sms_history_church", "sms_history", ["church_id"], unique=False
    )
    op.drop_column("sms_history", "error_message")
    op.drop_index(op.f("ix_qr_codes_id"), table_name="qr_codes")
    op.create_index("idx_qr_codes_member", "qr_codes", ["member_id"], unique=False)
    op.drop_index(op.f("ix_notifications_id"), table_name="notifications")
    op.create_index(
        "idx_notifications_user", "notifications", ["user_id", "is_read"], unique=False
    )
    op.drop_constraint(None, "members", type_="foreignkey")
    op.drop_index(op.f("ix_members_id"), table_name="members")
    op.create_index("idx_members_status", "members", ["member_status"], unique=False)
    op.create_index("idx_members_church_id", "members", ["church_id"], unique=False)
    op.drop_index(op.f("ix_churches_id"), table_name="churches")
    op.drop_index(op.f("ix_calendar_events_id"), table_name="calendar_events")
    op.drop_index(op.f("ix_calendar_events_event_date"), table_name="calendar_events")
    op.create_index(
        "idx_calendar_events_date", "calendar_events", ["event_date"], unique=False
    )
    op.drop_column("calendar_events", "event_time")
    op.drop_index(op.f("ix_bulletins_id"), table_name="bulletins")
    op.create_index("idx_bulletins_church_id", "bulletins", ["church_id"], unique=False)
    op.drop_index(op.f("ix_attendances_id"), table_name="attendances")
    op.create_index(
        "idx_attendances_member_id", "attendances", ["member_id"], unique=False
    )
    op.create_index(
        "idx_attendances_date", "attendances", ["service_date"], unique=False
    )
    op.create_unique_constraint(
        "attendances_member_id_service_date_service_type_key",
        "attendances",
        ["member_id", "service_date", "service_type"],
    )
    op.drop_index(op.f("ix_family_relationships_id"), table_name="family_relationships")
    op.drop_table("family_relationships")
    op.drop_index(op.f("ix_families_id"), table_name="families")
    op.drop_table("families")
    # ### end Alembic commands ###
